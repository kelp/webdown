name: Python Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.10', '3.11', '3.12', '3.13']

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Poetry Version
      run: poetry --version

    - name: Configure Poetry
      run: |
        poetry config virtualenvs.in-project false
        poetry config virtualenvs.create true

    - name: Cache Poetry virtualenv
      uses: actions/cache@v4
      with:
        path: ~/.cache/pypoetry/virtualenvs
        key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-poetry-

    - name: Install dependencies
      run: |
        poetry install

    - name: Lint with flake8
      run: |
        poetry run flake8 webdown

    - name: Type check with mypy
      run: |
        poetry run mypy webdown

    - name: Test with pytest
      run: |
        poetry run pytest --cov=webdown --cov-report=xml --cov-report=term

    - name: Run integration tests
      run: |
        poetry run pytest --integration

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      with:
        # Public repositories can upload coverage without a token
        # We removed the token requirement for now. To add a token:
        # 1. Register at https://codecov.io with your GitHub account
        # 2. Add CODECOV_TOKEN repository secret in GitHub repo settings
        # token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: false
        verbose: true

  build:
    needs: test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'

    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Build package
      run: |
        poetry build

    - name: Store built package
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/
        retention-days: 7
